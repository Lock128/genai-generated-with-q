// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenaiGeneratedWithQStack Stack Snapshot 1`] = `
{
  "Outputs": {
    "ApiUrl": {
      "Description": "URL of the API Gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EventsApiBA8771C4",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EventsApiDeploymentStageprodA51EE477",
            },
            "/",
          ],
        ],
      },
    },
    "EventsApiEndpoint08310F1D": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "EventsApiBA8771C4",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "EventsApiDeploymentStageprodA51EE477",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EventsApiAccountE911E9B2": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "EventsApiBA8771C4",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "EventsApiCloudWatchRoleD8FF2067",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "EventsApiBA8771C4": {
      "Properties": {
        "Description": "API for accessing event information",
        "Name": "Events Service",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "EventsApiCloudWatchRoleD8FF2067": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "EventsApiDeployment6D3A8004ea36a727e846ddb27d3020b4919339e1": {
      "DependsOn": [
        "EventsApieventsGETE03DEBBC",
        "EventsApieventsOPTIONS9647CF3A",
        "EventsApieventsA45FE214",
        "EventsApiOPTIONS81D5437B",
      ],
      "Properties": {
        "Description": "API for accessing event information",
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "EventsApiDeploymentStageprodA51EE477": {
      "DependsOn": [
        "EventsApiAccountE911E9B2",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "EventsApiDeployment6D3A8004ea36a727e846ddb27d3020b4919339e1",
        },
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "EventsApiOPTIONS81D5437B": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "EventsApiBA8771C4",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "EventsApieventsA45FE214": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "EventsApiBA8771C4",
            "RootResourceId",
          ],
        },
        "PathPart": "events",
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "EventsApieventsGETApiPermissionMyTestStackEventsApiC5DEC020GETevents8522C980": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EventsHandler8B5D6941",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "EventsApiBA8771C4",
              },
              "/",
              {
                "Ref": "EventsApiDeploymentStageprodA51EE477",
              },
              "/GET/events",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EventsApieventsGETApiPermissionTestMyTestStackEventsApiC5DEC020GETevents65FC2BFD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EventsHandler8B5D6941",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "EventsApiBA8771C4",
              },
              "/test-invoke-stage/GET/events",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EventsApieventsGETE03DEBBC": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "RequestTemplates": {
            "application/json": "{ "statusCode": "200" }",
          },
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "EventsHandler8B5D6941",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "EventsApieventsA45FE214",
        },
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "EventsApieventsOPTIONS9647CF3A": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "EventsApieventsA45FE214",
        },
        "RestApiId": {
          "Ref": "EventsApiBA8771C4",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "EventsHandler8B5D6941": {
      "DependsOn": [
        "EventsHandlerServiceRoleAEFD2FF3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2db0ebfff2b0e01598c0c52d5950a648150f86e599951125a058671a61db9796.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "EventsHandlerServiceRoleAEFD2FF3",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EventsHandlerServiceRoleAEFD2FF3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
